---
description: Your Objective
globs: 
alwaysApply: true
---
DO NOT EDIT A GAMESTATE FILE
DO NOT EDIT EXISTING TEST DATA


# CODE RULES

- Write effecient c# code that uses spans / memory
- Write a reader similiar to how System.Text.Json was designed to parse large json files
- Reverse engineer the stellaris sav file gamestate format
- Must use KeyValue / List / Object / Int / Bool / String KeyValue Type design
- Should not write properties or methods based on specific Key names used within the file
- We are writing a gamestate file parser/reader in C#

# Reverse Engineering GameState

- The gamestate file is NOT JSON. The gamestate file is similar to a keyvalue store, but is not simple
- The @unzipped-chunked folder can be used to read partial contents of the [original-gamestate](mdc:reverse-engineer-samples/original-gamestate)

- Write unit tests to ensure the parser created is working properly
- Ensure to cover all known keys 
- Ensure values are captured correctly from the gamestate

- Must handle lists, nested objected, strings, booleans, etc etc

# Testing

- Use the real file [original-gamestate](mdc:reverse-engineer-samples/original-gamestate) for unit testing against the real file
- do NOT use the unzippedc-chunked for testing as these files are only for reverse-engineering / looking at structure

