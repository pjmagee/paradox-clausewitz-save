name: Publish NuGet Packages

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Needed for GitVersion

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 10.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3
      with:
        versionSpec: '6.0.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3

    - name: Display GitVersion outputs
      run: |
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"

    - name: Restore dependencies
      run: dotnet restore ./src/MageeSoft.PDX.CE.slnx

    - name: Build
      run: dotnet build ./src/MageeSoft.PDX.CE.slnx --configuration Release --no-restore

    - name: Test
      run: dotnet test ./src/MageeSoft.PDX.CE.slnx --configuration Release --no-build

    - name: Pack Parser
      run: dotnet pack ./src/MageeSoft.PDX.CE/MageeSoft.PDX.CE.csproj --configuration Release --output nupkgs /p:Version=${{ steps.gitversion.outputs.semVer }}

    - name: Setup GitHub NuGet source
      run: |
        dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

    - name: Push to GitHub Packages
      run: dotnet nuget push "nupkgs/*.nupkg" --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate

    - name: Upload packages as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: nupkgs/*.nupkg

    - name: Upload packages to Release
      if: ${{ github.event_name == 'release' }}
      uses: softprops/action-gh-release@v2
      with:
        files: nupkgs/*.nupkg