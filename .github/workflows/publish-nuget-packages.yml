name: Publish NuGet Packages

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Needed for GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 10.0.x
        dotnet-quality: preview
        global-json-file: ./src/global.json
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0
      with:
        versionSpec: '5.x'
          
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0
      with:
        useConfigFile: true
        
    - name: Display GitVersion outputs
      run: |
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        
    - name: Restore dependencies
      run: dotnet restore ./src/MageeSoft.Paradox.Clausewitz.Save.sln
      
    - name: Build
      run: dotnet build ./src/MageeSoft.Paradox.Clausewitz.Save.sln --configuration Release --no-restore
      
    - name: Test
      run: dotnet test ./src/MageeSoft.Paradox.Clausewitz.Save.sln --configuration Release --no-build
      
    - name: Pack Parser
      run: dotnet pack ./src/MageeSoft.Paradox.Clausewitz.Save.Parser/MageeSoft.Paradox.Clausewitz.Save.Parser.csproj --configuration Release --no-build --output nupkgs /p:Version=${{ steps.gitversion.outputs.semVer }}
      
    - name: Pack Reader
      run: dotnet pack ./src/MageeSoft.Paradox.Clausewitz.Save.Reader/MageeSoft.Paradox.Clausewitz.Save.Reader.csproj --configuration Release --no-build --output nupkgs /p:Version=${{ steps.gitversion.outputs.semVer }}
      
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      with:
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
        nuget-version: '6.x'
      
    - name: Add GitHub NuGet source
      run: |
        dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
      
    - name: Push to GitHub Packages
      run: dotnet nuget push "nupkgs/*.nupkg" --source "github" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate
      
    - name: Push to NuGet.org
      if: success() && startsWith(github.ref, 'refs/tags/v')
      run: dotnet nuget push "nupkgs/*.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ steps.gitversion.outputs.semVer }}
        body: |
          # Release v${{ steps.gitversion.outputs.semVer }}
          
          ## What's Changed
          * See commit history for changes
          
          ## Available Packages:
          - MageeSoft.Paradox.Clausewitz.Save.Parser v${{ steps.gitversion.outputs.semVer }}
          - MageeSoft.Paradox.Clausewitz.Save.Reader v${{ steps.gitversion.outputs.semVer }}
          
          ## Installation:
          ```
          # Core parser only:
          dotnet add package MageeSoft.Paradox.Clausewitz.Save.Parser --version ${{ steps.gitversion.outputs.semVer }}
          
          # Higher-level reader (includes parser):
          dotnet add package MageeSoft.Paradox.Clausewitz.Save.Reader --version ${{ steps.gitversion.outputs.semVer }}
          ```
        files: nupkgs/*.nupkg
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
