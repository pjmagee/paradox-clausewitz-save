name: Publish Native Executables

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  setup-gitversion:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
      majorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for GitVersion
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
        with:
          useConfigFile: true
          
      - name: Display GitVersion outputs
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"

  build-windows:
    needs: setup-gitversion
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for GitVersion
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 10.0.x-preview2
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          
      - name: Build native executable for Windows
        run: .\etc\build-native-executable.ps1 -RuntimeIdentifier win-${{ matrix.arch }}
        
      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./artifacts/paradox-clausewitz-sav_${{ needs.setup-gitversion.outputs.majorMinorPatch }}_windows_${{ matrix.arch }}.zip
          asset_name: paradox-clausewitz-sav_${{ needs.setup-gitversion.outputs.majorMinorPatch }}_windows_${{ matrix.arch }}.zip
          asset_content_type: application/zip

  build-linux:
    needs: setup-gitversion
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for GitVersion
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Linux ${{ matrix.arch }}
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: ./etc/Dockerfile.linux-cross
          build-args: |
            TARGETARCH=${{ matrix.arch }}
          outputs: type=local,dest=./artifacts

      - name: List build outputs
        run: ls -la ./artifacts/

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./artifacts/paradox-clausewitz-sav_${{ needs.setup-gitversion.outputs.majorMinorPatch }}_linux_${{ matrix.arch }}.tar.gz
          asset_name: paradox-clausewitz-sav_${{ needs.setup-gitversion.outputs.majorMinorPatch }}_linux_${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip

  build-macos:
    needs: setup-gitversion
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for GitVersion
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 10.0.x-preview2
          
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
          
      - name: Install macOS workload
        run: dotnet workload install macos
        
      - name: Make scripts executable
        run: |
          chmod +x ./etc/build-native-executable.ps1
          chmod +x ./etc/package-native-executable.ps1 -Platform macos
          
      - name: Build native executable for macOS
        run: ./etc/build-native-executable.ps1 -RuntimeIdentifier osx-${{ matrix.arch }}
        
      - name: List artifacts
        run: ls -la ./artifacts/
        
      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./artifacts/paradox-clausewitz-sav_${{ needs.setup-gitversion.outputs.majorMinorPatch }}_macos_${{ matrix.arch }}.tar.gz
          asset_name: paradox-clausewitz-sav_${{ needs.setup-gitversion.outputs.majorMinorPatch }}_macos_${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip

